[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is my Lab Journal for Causal Data Science For Business Analytics."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.clear\nMake sure to render you website every time before you want to upload changes."
  },
  {
    "objectID": "content/01_journal/02_statistics.html",
    "href": "content/01_journal/02_statistics.html",
    "title": "1 2question",
    "section": "",
    "text": "#1question\nrandom_vars &lt;- readRDS(\"random_vars.rds\")\n\nsummary(random_vars)\n\n#&gt;       age            income       \n#&gt;  Min.   : 0.00   Min.   :    0.0  \n#&gt;  1st Qu.:19.00   1st Qu.:  771.5  \n#&gt;  Median :31.50   Median : 3007.0  \n#&gt;  Mean   :33.47   Mean   : 3510.7  \n#&gt;  3rd Qu.:46.00   3rd Qu.: 5696.2  \n#&gt;  Max.   :99.00   Max.   :10485.0\n\nexpected_value &lt;- colMeans(random_vars)\nvariance &lt;- apply(random_vars, 2, var)\nstandard_deviation &lt;- sqrt(variance)\n\n\ncat(\"Expected Value:\\n\", expected_value, \"\\n\")\n\n#&gt; Expected Value:\n#&gt;  33.471 3510.731\n\ncat(\"Variance:\\n\", variance, \"\\n\")\n\n#&gt; Variance:\n#&gt;  340.6078 8625646\n\ncat(\"Standard Deviation:\\n\", standard_deviation, \"\\n\")\n\n#&gt; Standard Deviation:\n#&gt;  18.45556 2936.945\n\n\n\n1 2question\nIt make sense beacause standard deviation gives us the distribution of data that how disperse or spreaded the data is.\n\n#3question\n\ncov &lt;- cov(random_vars)\ncor &lt;- cor(random_vars)\n\ncat(\"Covariance Matrix:\\n\", cov, \"\\n\")\n\n#&gt; Covariance Matrix:\n#&gt;  340.6078 29700.15 29700.15 8625646\n\ncat(\"Correlation Matrix:\\n\", cor, \"\\n\")\n\n#&gt; Correlation Matrix:\n#&gt;  1 0.5479432 0.5479432 1\n\n\nhere the correlation represents that its in high in magnitute so which indicates stronger linear relationship between age and income and covarince indicates the measure of linear dependancy of age and income\n\n\n2 4question\nCorrelation is a standardized measure that ranges from -1 to 1, it makes easier to compare the strength and direction of the relationship between variables.\n\n# 5question\n\nconditional_mean_age_18 &lt;- mean(random_vars$income[random_vars$age &lt;= 18])\nconditional_mean_age_18_65 &lt;- mean(random_vars$income[random_vars$age &gt; 18 & random_vars$age &lt; 65])\nconditional_mean_age_65 &lt;- mean(random_vars$income[random_vars$age &gt;= 65])\n\n\ncat(\"Conditional Expected Value (Age &lt;= 18): \", conditional_mean_age_18, \"\\n\")\n\n#&gt; Conditional Expected Value (Age &lt;= 18):  389.6074\n\ncat(\"Conditional Expected Value (18 &lt; Age &lt; 65): \", conditional_mean_age_18_65, \"\\n\")\n\n#&gt; Conditional Expected Value (18 &lt; Age &lt; 65):  4737.609\n\ncat(\"Conditional Expected Value (Age &gt;= 65): \", conditional_mean_age_65, \"\\n\")\n\n#&gt; Conditional Expected Value (Age &gt;= 65):  1777.237"
  },
  {
    "objectID": "content/01_journal/04_causality.html",
    "href": "content/01_journal/04_causality.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "library(ggplot2)\n\n\nset.seed(223)\n\n\nvariable1 &lt;- rnorm(200)\nvariable2 &lt;- variable1 + rnorm(200)\n\n\ndf &lt;- data.frame(Variable1 = variable1, Variable2 = variable2)\n\n\nggplot(df, aes(x = Variable1, y = Variable2)) +\n  geom_point() +\n  labs(title = \"Spurious Correlation Example\", x = \"Variable 1\", y = \"Variable 2\") +\n  theme_minimal()\n\n\n\n\n\n\n\ndata(mtcars)\n\n\nggplot(mtcars, aes(x = factor(cyl))) +\n  geom_bar() +\n  labs(title = \"Bar Graph of Number of Cylinders\", x = \"Number of Cylinders\", y = \"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "content/01_journal/09_iv.html",
    "href": "content/01_journal/09_iv.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "library(dagitty)\n\ndag &lt;- dagitty('\n  dag {\n    Encouragement -&gt; UseNewFeature\n    Encouragement -&gt; TimeSpent\n    UserActivity -&gt; UseNewFeature\n    UserActivity -&gt; TimeSpent\n    Unobserved -&gt; UseNewFeature\n    Unobserved -&gt; TimeSpent\n  }\n')\n\n\nplot(dag)\n\n#&gt; Plot coordinates for graph not supplied! Generating coordinates, see ?coordinates for how to set your own.\n\ndata &lt;- readRDS(\"rand_enc.rds\")\n\n\n\nnaive_model &lt;- lm(time_spent ~ used_ftr, data = data)\nnaive_estimate &lt;- coef(naive_model)[\"used_ftr\"]\n\nlibrary(AER)\n\n#&gt; Loading required package: car\n\n\n#&gt; Loading required package: carData\n\n\n#&gt; Loading required package: lmtest\n\n\n#&gt; Loading required package: zoo\n\n\n#&gt; \n#&gt; Attaching package: 'zoo'\n\n\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     as.Date, as.Date.numeric\n\n\n#&gt; Loading required package: sandwich\n\n\n#&gt; Loading required package: survival\n\n\n\n\n\n\n\n\niv_model &lt;- ivreg(time_spent ~ used_ftr | rand_enc, data = data)\niv_estimate &lt;- coef(iv_model)[\"used_ftr\"]\n\n\ncat(\"Naive Estimate:\", naive_estimate, \"\\n\")\n\n#&gt; Naive Estimate: 10.82269\n\ncat(\"IV Estimate:\", iv_estimate, \"\\n\")\n\n#&gt; IV Estimate: 9.738175"
  },
  {
    "objectID": "content/01_journal/07_matching.html",
    "href": "content/01_journal/07_matching.html",
    "title": "1 Assuming you have a time variable indicating before/after",
    "section": "",
    "text": "library(dagitty) library(MatchIt) library(tidyverse) library(ipw) library(cem)\nmembership_data &lt;- readRDS(“membership.rds”)\ndag &lt;- dagitty(“dag { age -&gt; avg_purch sex -&gt; avg_purch pre_avg_purch -&gt; avg_purch card -&gt; avg_purch }”)\n\n1 Assuming you have a time variable indicating before/after\nmembership_data\\(time &lt;- as.factor(membership_data\\)time_variable)\n\n\n2 Calculate averages before and after\nbefore_mean &lt;- mean(membership_data\\(sales[membership_data\\)time == “before”]) after_mean &lt;- mean(membership_data\\(sales[membership_data\\)time == “after”])\n\n\n3 Naive estimate of ATE\nnaive_ate &lt;- after_mean - before_mean\n\n\n4 Define the variables for matching\nmatching_vars &lt;- c(“age”, “sex”, “pre_avg_purch”)\n\n\n5 Perform coarsened exact matching\ncem_result &lt;- cem(time ~ matching_vars, data = membership_data) matched_data_cem &lt;- match.data(cem_result)\n\n\n6 Estimate propensity scores\nps_model &lt;- glm(time ~ matching_vars, data = membership_data, family = “binomial”) membership_data$propensity_score &lt;- predict(ps_model, type = “response”)\n\n\n7 Perform inverse probability weighting\nipw_result &lt;- weightit(weave = FALSE, propensity_score ~ time, data = membership_data) weighted_data &lt;- as.data.frame(ipw_result\\(weights * membership_data\\)sales) weighted_ate &lt;- mean(weighted_data[membership_data\\(time == \"after\"]) -  mean(weighted_data[membership_data\\)time == “before”])"
  },
  {
    "objectID": "content/01_journal/05_dag.html",
    "href": "content/01_journal/05_dag.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "library(dagitty)\n\n\ndag &lt;- dagitty('dag {\n  ParkingSpots -&gt; Location\n  ParkingSpots -&gt; Sales\n  Location -&gt; Sales\n}')\n\n\nplot(dag)\n\n#&gt; Plot coordinates for graph not supplied! Generating coordinates, see ?coordinates for how to set your own.\n\ncustomer_sat&lt;- readRDS(\"customer_sat.rds\")\n\nmodel_1 &lt;- lm(satisfaction ~ follow_ups, data = customer_sat)\nsummary(model_1)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = satisfaction ~ follow_ups, data = customer_sat)\n#&gt; \n#&gt; Residuals:\n#&gt;     Min      1Q  Median      3Q     Max \n#&gt; -12.412  -5.257   1.733   4.506  12.588 \n#&gt; \n#&gt; Coefficients:\n#&gt;             Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)  78.8860     4.2717  18.467 1.04e-10 ***\n#&gt; follow_ups   -3.3093     0.6618  -5.001 0.000243 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 7.923 on 13 degrees of freedom\n#&gt; Multiple R-squared:  0.658,  Adjusted R-squared:  0.6316 \n#&gt; F-statistic: 25.01 on 1 and 13 DF,  p-value: 0.0002427\n\nmodel_2 &lt;- lm(satisfaction ~ follow_ups + subscription, data = customer_sat)\nsummary(model_2)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = satisfaction ~ follow_ups + subscription, data = customer_sat)\n#&gt; \n#&gt; Residuals:\n#&gt;     Min      1Q  Median      3Q     Max \n#&gt; -4.3222 -2.1972  0.3167  2.2667  3.9944 \n#&gt; \n#&gt; Coefficients:\n#&gt;                      Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)           26.7667     6.6804   4.007  0.00206 ** \n#&gt; follow_ups             2.1944     0.7795   2.815  0.01682 *  \n#&gt; subscriptionPremium   44.7222     5.6213   7.956 6.88e-06 ***\n#&gt; subscriptionPremium+  18.0722     2.1659   8.344 4.37e-06 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 2.958 on 11 degrees of freedom\n#&gt; Multiple R-squared:  0.9597, Adjusted R-squared:  0.9487 \n#&gt; F-statistic: 87.21 on 3 and 11 DF,  p-value: 5.956e-08\n\ncoefficients_comparison &lt;- data.frame(\n  Model1 = coef(model_1),\n  Model2 = coef(model_2)\n)\n\n#&gt; Warning in data.frame(Model1 = coef(model_1), Model2 = coef(model_2)): row\n#&gt; names were found from a short variable and have been discarded\n\nprint(coefficients_comparison)\n\n#&gt;      Model1    Model2\n#&gt; 1 78.886047 26.766667\n#&gt; 2 -3.309302  2.194444\n#&gt; 3 78.886047 44.722222\n#&gt; 4 -3.309302 18.072222\n\nlibrary(ggplot2)\n\n\n\n\n\n\n\nggplot(customer_sat, aes(x = follow_ups, y = satisfaction,)) +\n  geom_point(shape = 16) +  \n  labs(x = \"Follow-up Calls\", y = \"Satisfaction\", title = \"Scatter Plot: Follow-up Calls vs Satisfaction\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\") \n\n#&gt; `geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "content/01_journal/06_rct.html",
    "href": "content/01_journal/06_rct.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "library(tidyverse)\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.4     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.2     \n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(broom)\nlibrary(ggplot2)\n\n\nabtest_data &lt;- readRDS(\"abtest_online.rds\")\n\n\nstr(abtest_data)\n\n#&gt; tibble [1,000 × 6] (S3: tbl_df/tbl/data.frame)\n#&gt;  $ ip             : chr [1:1000] \"161.88.211.70\" \"239.86.201.0\" \"35.90.22.130\" \"219.176.193.3\" ...\n#&gt;  $ chatbot        : logi [1:1000] TRUE TRUE TRUE FALSE TRUE TRUE ...\n#&gt;  $ previous_visit : num [1:1000] 0 1 1 4 1 2 1 1 1 0 ...\n#&gt;  $ mobile_device  : logi [1:1000] FALSE FALSE FALSE TRUE FALSE FALSE ...\n#&gt;  $ purchase       : num [1:1000] 0 1 0 0 0 0 1 1 0 0 ...\n#&gt;  $ purchase_amount: num [1:1000] 0 39.5 0 0 0 ...\n\nggplot(abtest_data, aes(x = chatbot, y = previous_visit)) +\n  geom_boxplot() +\n  labs(title = \"Balance Check: Covariates Across Groups\", x = \"Chatbot\", y = \"Previous Visits\")\n\n\n\n\n\n\n\nreg_model &lt;- lm(purchase_amount ~ chatbot + mobile_device + previous_visit, data = abtest_data)\n\n\nsummary(reg_model)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = purchase_amount ~ chatbot + mobile_device + previous_visit, \n#&gt;     data = abtest_data)\n#&gt; \n#&gt; Residuals:\n#&gt;     Min      1Q  Median      3Q     Max \n#&gt; -25.414 -14.428  -8.435  12.559  64.584 \n#&gt; \n#&gt; Coefficients:\n#&gt;                   Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)        15.2840     1.1227  13.614  &lt; 2e-16 ***\n#&gt; chatbotTRUE        -6.8488     1.1792  -5.808 8.49e-09 ***\n#&gt; mobile_deviceTRUE  -0.8562     1.2642  -0.677  0.49841    \n#&gt; previous_visit      0.7792     0.2869   2.716  0.00673 ** \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 18.6 on 996 degrees of freedom\n#&gt; Multiple R-squared:  0.04243,    Adjusted R-squared:  0.03954 \n#&gt; F-statistic: 14.71 on 3 and 996 DF,  p-value: 2.228e-09\n\nreg_interaction_model &lt;- lm(purchase_amount ~ chatbot * mobile_device + previous_visit, data = abtest_data)\n\n\nsummary(reg_interaction_model)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = purchase_amount ~ chatbot * mobile_device + previous_visit, \n#&gt;     data = abtest_data)\n#&gt; \n#&gt; Residuals:\n#&gt;     Min      1Q  Median      3Q     Max \n#&gt; -25.403 -14.450  -8.445  12.549  64.562 \n#&gt; \n#&gt; Coefficients:\n#&gt;                               Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)                   15.27384    1.19130  12.821  &lt; 2e-16 ***\n#&gt; chatbotTRUE                   -6.82837    1.42580  -4.789 1.93e-06 ***\n#&gt; mobile_deviceTRUE             -0.82375    1.79309  -0.459  0.64605    \n#&gt; previous_visit                 0.77914    0.28711   2.714  0.00677 ** \n#&gt; chatbotTRUE:mobile_deviceTRUE -0.06455    2.52907  -0.026  0.97964    \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 18.6 on 995 degrees of freedom\n#&gt; Multiple R-squared:  0.04243,    Adjusted R-squared:  0.03858 \n#&gt; F-statistic: 11.02 on 4 and 995 DF,  p-value: 9.485e-09\n\nggplot(abtest_data, aes(x = chatbot, y = purchase_amount, color = mobile_device)) +\n  geom_boxplot() +\n  labs(title = \"Interaction Effect: Chatbot and Purchase Amount for Mobile Users\", x = \"Chatbot\", y = \"Purchase Amount\")\n\n\n\n\n\n\n\nlogistic_model &lt;- glm(purchase ~ chatbot + mobile_device + previous_visit, family = binomial(link = 'logit'), data = abtest_data)\n\n\nsummary(logistic_model)\n\n#&gt; \n#&gt; Call:\n#&gt; glm(formula = purchase ~ chatbot + mobile_device + previous_visit, \n#&gt;     family = binomial(link = \"logit\"), data = abtest_data)\n#&gt; \n#&gt; Coefficients:\n#&gt;                   Estimate Std. Error z value Pr(&gt;|z|)    \n#&gt; (Intercept)       -0.22185    0.12347  -1.797  0.07237 .  \n#&gt; chatbotTRUE       -0.96894    0.13564  -7.144 9.09e-13 ***\n#&gt; mobile_deviceTRUE -0.07119    0.14530  -0.490  0.62417    \n#&gt; previous_visit     0.10606    0.03262   3.252  0.00115 ** \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; (Dispersion parameter for binomial family taken to be 1)\n#&gt; \n#&gt;     Null deviance: 1329.1  on 999  degrees of freedom\n#&gt; Residual deviance: 1262.2  on 996  degrees of freedom\n#&gt; AIC: 1270.2\n#&gt; \n#&gt; Number of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "content/01_journal/08_did.html",
    "href": "content/01_journal/08_did.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "data &lt;- readRDS(“hospdd.rds”)\nbefore_treated_mean &lt;- mean(filter(data, procedure == “new”, month == “before”)\\(satis) after_treated_mean &lt;- mean(filter(data, procedure == \"new\", month == \"after\")\\)satis) before_control_mean &lt;- mean(filter(data, procedure == “old”, month == “before”)\\(satis) after_control_mean &lt;- mean(filter(data, procedure == \"old\", month == \"after\")\\)satis)\ndiff_treated &lt;- after_treated_mean - before_treated_mean diff_control &lt;- after_control_mean - before_control_mean\ndiff_in_diff_estimate &lt;- diff_treated - diff_control\nreg_model &lt;- lm(satis ~ procedure * month + hospital, data = data)\ncoefficients &lt;- summary(reg_model)$coefficients\ndiff_in_diff_estimate_regression &lt;- coefficients[“procedure1:month4”, “Estimate”]"
  },
  {
    "objectID": "content/01_journal/01_probability.html",
    "href": "content/01_journal/01_probability.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "prob_tree&lt;- function()\n   {\n  prob_dic&lt;- c(\"p_T\"=0.3,\"p_NT\"=0.7)\n  p_T&lt;-0.3 #probability of on time\n  p_NT&lt;-0.7 #probability of not on time\n  p_S&lt;-0.6 #probability of on scope in change\n  p_NS&lt;-0.4 #probability of on no cope in change\n  \n  p_S_by_T&lt;-0.2 #p(S | T)\n  p_NS_by_T&lt;-0.8 #p(NS | T)\n  p_NS_by_NT&lt;-0.4 #p(NS | NT)\n  p_S_by_NT&lt;-0.6 #p(S | NT)\n  \n  \n  p_T_and_S &lt;- p_S_by_T * p_T #p(T and S)\n \n  p_T_and_NS &lt;- p_NS_by_T * p_T #p(T and NS)\n  p_NT_and_S &lt;- p_S_by_NT * p_NT #p(NT and S)\n  p_NT_and_NS &lt;- p_NS_by_NT * p_NT #p(NT and NS)\n  \n  \n  final_prob&lt;- c( p_T_and_S, p_T_and_NS, p_NT_and_S, p_NT_and_NS) \n  \n  print(final_prob)\n  \n  sum_prob&lt;- sum(final_prob)\n  print(sum_prob)\n }\n\n\np_s&lt;-589 #smartphones users \np_t&lt;-389 #tablet users\np_c&lt;-226 #camputer users\n\np_s_u_t &lt;- 73 #smartphones and tablet users\np_s_u_c &lt;- 88 #smartphones and computer users\np_t_u_c &lt;- 33 #tablet and computer users\n\np_s_u_t_u_c &lt;- 5 #all device users\n\nall_users&lt;-(p_s + p_t + p_c)\n\n\nans1 &lt;- (p_s_u_t_u_c/ all_users) * 100\nans1\n\n#&gt; [1] 0.4152824\n\nans2&lt;- ((p_s_u_t_u_c + p_s_u_t + p_s_u_c + p_t_u_c)/ all_users) * 100\nans2\n\n#&gt; [1] 16.52824\n\nans3 &lt;- ((p_s - (p_s_u_t + p_s_u_c + p_s_u_t_u_c)) + (p_t - (p_s_u_t + p_t_u_c + p_s_u_t_u_c)) + (p_c - (p_t_u_c + p_s_u_c + p_s_u_t_u_c)))/ all_users * 100\nans3\n\n#&gt; [1] 66.52824\n\n\n#assingment3 ans: p(’A|B) = 0.19 p(A|B) = 0.80"
  },
  {
    "objectID": "content/01_journal/01_probability.html#header-2",
    "href": "content/01_journal/01_probability.html#header-2",
    "title": "Probability Theory",
    "section": "\n2.1 Header 2",
    "text": "2.1 Header 2\nHeader 3\nHeader 4\nHeader 5\nHeader 6"
  },
  {
    "objectID": "content/01_journal/03_regression.html",
    "href": "content/01_journal/03_regression.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "library(tidyverse)\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.4     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.2     \n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ncar_prices&lt;- readRDS(\"car_prices.rds\")\n\n\n\ndim(car_prices)\n\n#&gt; [1] 181  22\n\nstr(car_prices)\n\n#&gt; tibble [181 × 22] (S3: tbl_df/tbl/data.frame)\n#&gt;  $ aspiration      : chr [1:181] \"std\" \"std\" \"std\" \"std\" ...\n#&gt;  $ doornumber      : chr [1:181] \"two\" \"two\" \"two\" \"four\" ...\n#&gt;  $ carbody         : chr [1:181] \"convertible\" \"convertible\" \"hatchback\" \"sedan\" ...\n#&gt;  $ drivewheel      : chr [1:181] \"rwd\" \"rwd\" \"rwd\" \"fwd\" ...\n#&gt;  $ enginelocation  : chr [1:181] \"front\" \"front\" \"front\" \"front\" ...\n#&gt;  $ wheelbase       : num [1:181] 88.6 88.6 94.5 99.8 99.4 ...\n#&gt;  $ carlength       : num [1:181] 169 169 171 177 177 ...\n#&gt;  $ carwidth        : num [1:181] 64.1 64.1 65.5 66.2 66.4 66.3 71.4 71.4 71.4 67.9 ...\n#&gt;  $ carheight       : num [1:181] 48.8 48.8 52.4 54.3 54.3 53.1 55.7 55.7 55.9 52 ...\n#&gt;  $ curbweight      : num [1:181] 2548 2548 2823 2337 2824 ...\n#&gt;  $ enginetype      : chr [1:181] \"dohc\" \"dohc\" \"ohcv\" \"ohc\" ...\n#&gt;  $ cylindernumber  : chr [1:181] \"four\" \"four\" \"six\" \"four\" ...\n#&gt;  $ enginesize      : num [1:181] 130 130 152 109 136 136 136 136 131 131 ...\n#&gt;  $ fuelsystem      : chr [1:181] \"mpfi\" \"mpfi\" \"mpfi\" \"mpfi\" ...\n#&gt;  $ boreratio       : num [1:181] 3.47 3.47 2.68 3.19 3.19 3.19 3.19 3.19 3.13 3.13 ...\n#&gt;  $ stroke          : num [1:181] 2.68 2.68 3.47 3.4 3.4 3.4 3.4 3.4 3.4 3.4 ...\n#&gt;  $ compressionratio: num [1:181] 9 9 9 10 8 8.5 8.5 8.5 8.3 7 ...\n#&gt;  $ horsepower      : num [1:181] 111 111 154 102 115 110 110 110 140 160 ...\n#&gt;  $ peakrpm         : num [1:181] 5000 5000 5000 5500 5500 5500 5500 5500 5500 5500 ...\n#&gt;  $ citympg         : num [1:181] 21 21 19 24 18 19 19 19 17 16 ...\n#&gt;  $ highwaympg      : num [1:181] 27 27 26 30 22 25 25 25 20 22 ...\n#&gt;  $ price           : num [1:181] 13495 16500 16500 13950 17450 ...\n\nsummary(car_prices)\n\n#&gt;   aspiration         doornumber          carbody           drivewheel       \n#&gt;  Length:181         Length:181         Length:181         Length:181        \n#&gt;  Class :character   Class :character   Class :character   Class :character  \n#&gt;  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n#&gt;                                                                             \n#&gt;                                                                             \n#&gt;                                                                             \n#&gt;  enginelocation       wheelbase        carlength        carwidth    \n#&gt;  Length:181         Min.   : 86.60   Min.   :141.1   Min.   :60.30  \n#&gt;  Class :character   1st Qu.: 94.50   1st Qu.:166.3   1st Qu.:64.00  \n#&gt;  Mode  :character   Median : 96.50   Median :173.0   Median :65.40  \n#&gt;                     Mean   : 98.21   Mean   :173.3   Mean   :65.74  \n#&gt;                     3rd Qu.:100.40   3rd Qu.:180.2   3rd Qu.:66.50  \n#&gt;                     Max.   :120.90   Max.   :208.1   Max.   :72.30  \n#&gt;    carheight       curbweight    enginetype        cylindernumber    \n#&gt;  Min.   :47.80   Min.   :1488   Length:181         Length:181        \n#&gt;  1st Qu.:52.00   1st Qu.:2122   Class :character   Class :character  \n#&gt;  Median :53.70   Median :2410   Mode  :character   Mode  :character  \n#&gt;  Mean   :53.58   Mean   :2521                                        \n#&gt;  3rd Qu.:55.50   3rd Qu.:2910                                        \n#&gt;  Max.   :59.80   Max.   :4066                                        \n#&gt;    enginesize     fuelsystem          boreratio         stroke    \n#&gt;  Min.   : 61.0   Length:181         Min.   :2.540   Min.   :2.07  \n#&gt;  1st Qu.: 98.0   Class :character   1st Qu.:3.150   1st Qu.:3.08  \n#&gt;  Median :120.0   Mode  :character   Median :3.310   Median :3.23  \n#&gt;  Mean   :127.1                      Mean   :3.325   Mean   :3.23  \n#&gt;  3rd Qu.:141.0                      3rd Qu.:3.590   3rd Qu.:3.40  \n#&gt;  Max.   :326.0                      Max.   :3.940   Max.   :4.17  \n#&gt;  compressionratio   horsepower       peakrpm        citympg     \n#&gt;  Min.   : 7.000   Min.   : 48.0   Min.   :4200   Min.   :13.00  \n#&gt;  1st Qu.: 8.500   1st Qu.: 70.0   1st Qu.:4800   1st Qu.:19.00  \n#&gt;  Median : 9.000   Median : 95.0   Median :5200   Median :24.00  \n#&gt;  Mean   : 8.848   Mean   :106.2   Mean   :5182   Mean   :24.85  \n#&gt;  3rd Qu.: 9.400   3rd Qu.:116.0   3rd Qu.:5500   3rd Qu.:30.00  \n#&gt;  Max.   :11.500   Max.   :288.0   Max.   :6600   Max.   :49.00  \n#&gt;    highwaympg        price      \n#&gt;  Min.   :16.00   Min.   : 5118  \n#&gt;  1st Qu.:25.00   1st Qu.: 7609  \n#&gt;  Median :30.00   Median : 9980  \n#&gt;  Mean   :30.48   Mean   :12999  \n#&gt;  3rd Qu.:34.00   3rd Qu.:16430  \n#&gt;  Max.   :54.00   Max.   :45400\n\nlm_model &lt;- lm(price ~ ., data = car_prices)\n\nsummary(lm_model)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = price ~ ., data = car_prices)\n#&gt; \n#&gt; Residuals:\n#&gt;    Min     1Q Median     3Q    Max \n#&gt;  -5662  -1120      0    798   9040 \n#&gt; \n#&gt; Coefficients:\n#&gt;                        Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)          -36269.965  15460.866  -2.346 0.020354 *  \n#&gt; aspirationturbo        1846.206   1041.391   1.773 0.078386 .  \n#&gt; doornumbertwo           242.523    571.929   0.424 0.672172    \n#&gt; carbodyhardtop        -3691.743   1424.825  -2.591 0.010561 *  \n#&gt; carbodyhatchback      -3344.335   1238.359  -2.701 0.007757 ** \n#&gt; carbodysedan          -2292.820   1356.014  -1.691 0.093043 .  \n#&gt; carbodywagon          -3427.921   1490.285  -2.300 0.022885 *  \n#&gt; drivewheelfwd          -504.564   1076.623  -0.469 0.640030    \n#&gt; drivewheelrwd           -15.446   1268.070  -0.012 0.990299    \n#&gt; enginelocationrear     6643.492   2572.275   2.583 0.010806 *  \n#&gt; wheelbase               -30.197     92.776  -0.325 0.745294    \n#&gt; carlength               -29.740     51.672  -0.576 0.565824    \n#&gt; carwidth                731.819    244.533   2.993 0.003258 ** \n#&gt; carheight               123.195    134.607   0.915 0.361617    \n#&gt; curbweight                2.612      1.781   1.467 0.144706    \n#&gt; enginetypedohcv       -8541.957   4749.685  -1.798 0.074219 .  \n#&gt; enginetypel             978.748   1786.384   0.548 0.584619    \n#&gt; enginetypeohc          3345.252    933.001   3.585 0.000461 ***\n#&gt; enginetypeohcf          972.919   1625.631   0.598 0.550462    \n#&gt; enginetypeohcv        -6222.322   1236.415  -5.033 1.43e-06 ***\n#&gt; cylindernumberfive   -11724.540   3019.192  -3.883 0.000157 ***\n#&gt; cylindernumberfour   -11549.326   3177.177  -3.635 0.000387 ***\n#&gt; cylindernumbersix     -7151.398   2247.230  -3.182 0.001793 ** \n#&gt; cylindernumberthree   -4318.929   4688.833  -0.921 0.358545    \n#&gt; cylindernumbertwelve -11122.209   4196.494  -2.650 0.008946 ** \n#&gt; enginesize              125.934     26.541   4.745 5.00e-06 ***\n#&gt; fuelsystem2bbl          177.136    883.615   0.200 0.841400    \n#&gt; fuelsystemmfi         -3041.018   2576.996  -1.180 0.239934    \n#&gt; fuelsystemmpfi          359.278   1001.529   0.359 0.720326    \n#&gt; fuelsystemspdi        -2543.890   1363.546  -1.866 0.064140 .  \n#&gt; fuelsystemspfi          514.766   2499.229   0.206 0.837107    \n#&gt; boreratio             -1306.740   1642.221  -0.796 0.427516    \n#&gt; stroke                -4527.137    922.732  -4.906 2.49e-06 ***\n#&gt; compressionratio       -737.901    555.960  -1.327 0.186539    \n#&gt; horsepower               10.293     22.709   0.453 0.651035    \n#&gt; peakrpm                   2.526      0.634   3.983 0.000108 ***\n#&gt; citympg                 -90.352    166.647  -0.542 0.588538    \n#&gt; highwaympg              154.858    167.148   0.926 0.355761    \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 2189 on 143 degrees of freedom\n#&gt; Multiple R-squared:  0.9415, Adjusted R-squared:  0.9264 \n#&gt; F-statistic: 62.21 on 37 and 143 DF,  p-value: &lt; 2.2e-16\n\nregressor &lt;- car_prices$horsepower\n\n\ntypeof(regressor)\n\n#&gt; [1] \"double\"\n\nunique(regressor)\n\n#&gt;  [1] 111 154 102 115 110 140 160 101 121 182  48  70  68  88 145  58  76  60  86\n#&gt; [20] 100  78  90 176 262  84 120 155 184 175 116  69  97 152 200  95 142 143 207\n#&gt; [39] 288  73  82  94  62 112  92 161 156  85 114 162 134\n\ncoef_table &lt;- coef(lm_model)\neffect_on_price &lt;- coef_table[\"horsepower\"]\n\n\np_value &lt;- lm_model$Coefficients[\"horsepower\", \"Pr(&gt;|t|)\"]\n\n\ncat(\"Regressor (horsepower) data type:\", typeof(regressor))\n\n#&gt; Regressor (horsepower) data type: double\n\ncat(\"Regressor (horsepower) values:\", unique(regressor))\n\n#&gt; Regressor (horsepower) values: 111 154 102 115 110 140 160 101 121 182 48 70 68 88 145 58 76 60 86 100 78 90 176 262 84 120 155 184 175 116 69 97 152 200 95 142 143 207 288 73 82 94 62 112 92 161 156 85 114 162 134\n\ncat(\"Effect on price:\", effect_on_price)\n\n#&gt; Effect on price: 10.29354\n\ncat(\"Statistical significance (p-value):\", p_value)\n\n#&gt; Statistical significance (p-value):\n\ncar_prices_with_seat_heating &lt;- car_prices %&gt;%\nmutate(seat_heating = TRUE)\n\n\nlm_model_with_seat_heating &lt;- lm(price ~ ., data = car_prices_with_seat_heating)\n\n\nsummary(lm_model_with_seat_heating)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = price ~ ., data = car_prices_with_seat_heating)\n#&gt; \n#&gt; Residuals:\n#&gt;    Min     1Q Median     3Q    Max \n#&gt;  -5662  -1120      0    798   9040 \n#&gt; \n#&gt; Coefficients: (1 not defined because of singularities)\n#&gt;                        Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)          -36269.965  15460.866  -2.346 0.020354 *  \n#&gt; aspirationturbo        1846.206   1041.391   1.773 0.078386 .  \n#&gt; doornumbertwo           242.523    571.929   0.424 0.672172    \n#&gt; carbodyhardtop        -3691.743   1424.825  -2.591 0.010561 *  \n#&gt; carbodyhatchback      -3344.335   1238.359  -2.701 0.007757 ** \n#&gt; carbodysedan          -2292.820   1356.014  -1.691 0.093043 .  \n#&gt; carbodywagon          -3427.921   1490.285  -2.300 0.022885 *  \n#&gt; drivewheelfwd          -504.564   1076.623  -0.469 0.640030    \n#&gt; drivewheelrwd           -15.446   1268.070  -0.012 0.990299    \n#&gt; enginelocationrear     6643.492   2572.275   2.583 0.010806 *  \n#&gt; wheelbase               -30.197     92.776  -0.325 0.745294    \n#&gt; carlength               -29.740     51.672  -0.576 0.565824    \n#&gt; carwidth                731.819    244.533   2.993 0.003258 ** \n#&gt; carheight               123.195    134.607   0.915 0.361617    \n#&gt; curbweight                2.612      1.781   1.467 0.144706    \n#&gt; enginetypedohcv       -8541.957   4749.685  -1.798 0.074219 .  \n#&gt; enginetypel             978.748   1786.384   0.548 0.584619    \n#&gt; enginetypeohc          3345.252    933.001   3.585 0.000461 ***\n#&gt; enginetypeohcf          972.919   1625.631   0.598 0.550462    \n#&gt; enginetypeohcv        -6222.322   1236.415  -5.033 1.43e-06 ***\n#&gt; cylindernumberfive   -11724.540   3019.192  -3.883 0.000157 ***\n#&gt; cylindernumberfour   -11549.326   3177.177  -3.635 0.000387 ***\n#&gt; cylindernumbersix     -7151.398   2247.230  -3.182 0.001793 ** \n#&gt; cylindernumberthree   -4318.929   4688.833  -0.921 0.358545    \n#&gt; cylindernumbertwelve -11122.209   4196.494  -2.650 0.008946 ** \n#&gt; enginesize              125.934     26.541   4.745 5.00e-06 ***\n#&gt; fuelsystem2bbl          177.136    883.615   0.200 0.841400    \n#&gt; fuelsystemmfi         -3041.018   2576.996  -1.180 0.239934    \n#&gt; fuelsystemmpfi          359.278   1001.529   0.359 0.720326    \n#&gt; fuelsystemspdi        -2543.890   1363.546  -1.866 0.064140 .  \n#&gt; fuelsystemspfi          514.766   2499.229   0.206 0.837107    \n#&gt; boreratio             -1306.740   1642.221  -0.796 0.427516    \n#&gt; stroke                -4527.137    922.732  -4.906 2.49e-06 ***\n#&gt; compressionratio       -737.901    555.960  -1.327 0.186539    \n#&gt; horsepower               10.293     22.709   0.453 0.651035    \n#&gt; peakrpm                   2.526      0.634   3.983 0.000108 ***\n#&gt; citympg                 -90.352    166.647  -0.542 0.588538    \n#&gt; highwaympg              154.858    167.148   0.926 0.355761    \n#&gt; seat_heatingTRUE             NA         NA      NA       NA    \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 2189 on 143 degrees of freedom\n#&gt; Multiple R-squared:  0.9415, Adjusted R-squared:  0.9264 \n#&gt; F-statistic: 62.21 on 37 and 143 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "content/01_journal/10_rdd.html",
    "href": "content/01_journal/10_rdd.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "library(rdd)\ndata &lt;- readRDS(“coupon.rds”)\nrunning_variable &lt;- data\\(days_since_last_centered outcome_variable &lt;- data\\)purchase_after threshold &lt;- 0 # Replace with your actual threshold value\noriginal_bandwidth &lt;- 0.1 # Replace with your original bandwidth value\nrdd_result_original &lt;- rdd(data, y = outcome_variable, x = running_variable, cutpoint = threshold, h = original_bandwidth)\nhalf_bandwidth &lt;- original_bandwidth / 2 double_bandwidth &lt;- original_bandwidth * 2\nrdd_result_half &lt;- rdd(data, y = outcome_variable, x = running_variable, cutpoint = threshold, h = half_bandwidth)\nrdd_result_double &lt;- rdd(data, y = outcome_variable, x = running_variable, cutpoint = threshold, h = double_bandwidth)\nsummary(rdd_result_original) summary(rdd_result_half) summary(rdd_result_double)\nlibrary(ggplot2) library(dplyr)\nshipping_data &lt;- readRDS(“shipping.rds”)\nggplot(shipping_data, aes(x = purchase_amount, y = outcome_variable)) + geom_point() + geom_vline(xintercept = 30, linetype = “dashed”, color = “red”) + labs(title = “Relationship between Purchase Amount and Outcome Variable”, x = “Purchase Amount”, y = “Outcome Variable”) + theme_minimal()"
  }
]